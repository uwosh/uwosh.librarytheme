<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en-US" lang="en-US"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="quills.app">
  <head><title></title></head>
  <body>

    <tal:comment condition="nothing">
      Collection of macros for displaying individual entries.

      The main macro is display-entry, which you can pass some
      parameters. The parameters are needed to be able to use this one
      macro in a number of places: displaying one entry, main weblog
      page, topic page.

      By passing along some parameters we can keep the template clear
      of all logic and settings-gathering.
    </tal:comment>


    <metal:displayEntry metal:define-macro="display-entry">
      <tal:comment condition="nothing">
        Displays one individual entry.

        The macro is kept generic, so that it can be used in all places
        where an entry needs to be displayed. Only a feed will use
        something else.

        The weblogentry_view template adds bells and whistles like
        trackback, long comments, etc. Don't put those in here!
      </tal:comment>
      <div class="weblog-entry"
           tal:define="second_level second_level | python:False;
                       show_content show_content | python:True;
                       entry nocall:entry | nothing;
                       displaying_one_entry python:view.displayingOneEntry(context, entry);
                       weblog nocall:weblog | python:entry.getWeblog();
                       weblog_content nocall:weblog_content | python:entry.getWeblogContentObject()">
        <tal:comment condition="nothing">
          Parameters:

          second_level - In listingviews, we're normally at h3. Only if
          we're not grouped by dates we have to use h2. This setting
          controls that.

          For headings of level 1, which occur if 'displaying_one_entry'
          is True, we won't make the header a link as it is the entry
          itself that's being displayed. For headers of level 2 or 3
          it will be clickable.

          displaying_one_entry is True if the context's URL is the same
          as the entry's URL.

          show_content - Whether to show the actual content or just the
          summary. Default: True.

          entry - The actual entry.
        </tal:comment>


        <tal:comment condition="nothing"> title </tal:comment>
        <tal:headerInListing tal:condition="displaying_one_entry">

          <div tal:replace="structure provider:plone.abovecontenttitle" />
          <h1 class="quill_headline" tal:content="entry/getTitle">
            Level 1 title, not clickable
          </h1>
          <div tal:replace="structure provider:plone.abovecontentbody" />
        </tal:headerInListing>
        <tal:headerInListing tal:condition="not: displaying_one_entry">
          <h2 class="quill_headline" tal:condition="second_level">
            <a href=""
               tal:attributes="href python:view.getArchiveURLFor(entry)"
               tal:content="entry/Title">
              Level 2 title, clickable
            </a>
          </h2>
          <h2 class="quill_headline weblog-view-entry-title" tal:condition="not: second_level">
            <a href=""
               tal:attributes="href python:view.getArchiveURLFor(entry)"
               tal:content="entry/getTitle">
              Level 3 title, clickable
            </a>
          </h2>
        </tal:headerInListing>

        <tal:comment condition="nothing"> Topic images  </tal:comment>
        <metal:macro use-macro="context/quills_entry_macros/topic-images"/>

        <tal:comment condition="nothing"> Byline </tal:comment>
        <tal:byline define="item_creator python:', '.join([each.getTitle() for each in entry.getAuthors()]);
                            item_modified entry/getPublicationDate;">
          <metal:macro use-macro="context/quills_entry_macros/byline" />
        </tal:byline>
        

        <tal:comment condition="nothing"> Description
        We add a special class (weblog-entry-only-excerpt) instead of
        the normal docoumentDescription to allow for a different
        formatting.
        </tal:comment>
        <tal:excerpt condition="not: show_content">
          <p class="weblog-entry-only-excerpt">
            <span tal:condition="entry/getExcerpt"
                  tal:content="entry/getExcerpt" />
			<span tal:on-error="python:str('')" tal:condition="not: entry/getExcerpt"
			      tal:content="python: context.restrictedTraverse('quills_entry_macros').force_excerpt(entry)" />
				
            <span class="weblog-read-more">
              <a href=""
                 tal:attributes="href python:view.getArchiveURLFor(entry)"
                 i18n:translate="read_more">
                read more...
              </a>
            </span>
          </p>
        </tal:excerpt>

        <tal:comment condition="nothing"> Main content </tal:comment>
        <div class=""
             tal:condition="python: entry.getText() and show_content"
             tal:attributes="class python:(entry.getMimeType() in ('text/structured', 'text/x-rst', )) and 'stx' or 'plain'"
             tal:content="structure entry/getText">
        </div>
		
		
        <div class="quill_inline">
            <div>Posted by:</div><span tal:content="python:view.getCreatorName(entry.Creator)">Author</span><span> on </span>
            <tal:block tal:define="dt modules/DateTime; modi entry/created; date python: dt.DateTime(modi).strftime('%B %d, %Y')">
                <span tal:content="date">date</span><div class="quill_space"></div>
            </tal:block>
            <tal:if condition="python:view.isDiscussionAllowedFor(entry)">
                <a style="text-decoration: none;" tal:attributes="href python:'%s#comments' % view.getArchiveURLFor(entry)">Comments</a>
                (<span tal:content="python:view.getCommentCountFor(entry)">0</span>)
            </tal:if>
        </div>        
		
		<tal:comment condition="nothing">Tags:</tal:comment>
        <!--<metal:macro use-macro="context/quills_entry_macros/filed-under"/>-->
      </div>
	  <br />
    </metal:displayEntry>

    <metal:topicImages define-macro="topic-images">
      <tal:comment condition="nothing">
        Display the topic images

        It is the responsibility of this macro to determine whether to
        display the images.
      </tal:comment>
      <div class="weblog-topic-images"
           tal:define="entry nocall:entry|nothing;
                       weblog nocall:weblog|nothing;
                       topics entry/getTopics"
           tal:condition="topics">

        <tal:comment condition="nothing">
          Parameters

          entry - The entry being displayed
          weblog - The parent weblog
        </tal:comment>

        <tal:categories repeat="topic topics">
          <a href=""
             tal:attributes="href string:${weblog_content/absolute_url}/topics/${topic/getId}">
            <img class="topic-image"
                 src=""
                 alt=""
                 title=""
                 tal:define="topicimage topic/getImage"
                 tal:condition="python: topicimage"
                 tal:attributes="src topicimage/absolute_url;
                                 title topic/title_or_id;
                                 alt topic/title_or_id;" />
          </a>
        </tal:categories>
      </div>
    </metal:topicImages>

    <metal:filedUnder metal:define-macro="filed-under">
      <tal:comment condition="nothing">
        Display the "filed under" list.

        The template uses a 'ul' list to get good plone-like
        semantics. Handy for google ratings. CSS should turn it into
        something usable.
      </tal:comment>
      <div  class="quill_inline"
           tal:define="entry nocall:entry|nothing;
                       weblog_content nocall:weblog_content|nothing;
                       topics entry/getTopics"
           tal:condition="topics">
        <tal:comment condition="nothing">
          Parameters

          entry - The entry being displayed
          weblog_content - The parent weblog
        </tal:comment>

        <div class="quill_space_s" 
             i18n:translate="filed_under">
          Tags:
        </div>
        <ul>
          <li tal:repeat="topic topics">
            <a href=""
               tal:content="topic/getTitle"
               tal:attributes="href
                               string:${weblog_content/absolute_url}/topics/${topic/getId}">
              Link to the topic
            </a>
          </li>
        </ul>
      </div>
    </metal:filedUnder>

    <metal:discussion define-macro="discussion-summary">
      
    </metal:discussion>
    
    <metal:byline define-macro="byline">
      <tal:showme tal:condition="wvconfig/show_about">
        <div class="documentByLine"
             tal:define="item_creator item_creator | nothing;
			             authors python:entry.getAuthors();">
            <span i18n:translate="label_by_author">
              by
			</span>
			<tal:block repeat="author authors">
            <a href="#"
			   tal:define="author_id python:str(author);
			               mtool context/portal_membership;
                           ploneauthor python:mtool.getMemberInfo(author_id)"
               tal:attributes="href string:${weblog_content/absolute_url}/authors/${author_id}"
               tal:content="python:ploneauthor and ploneauthor['fullname'] or author_id">
              Mister Dobalina, Mister Bob Dobalina
            </a> 
			</tal:block>
          
          &mdash;
          <tal:mod i18n:translate="box_last_modified">
            last modified
          </tal:mod>
          <span tal:define="item_modified item_modified | entry/getPublicationDate;
                            toLocalizedTime nocall:context/@@plone/toLocalizedTime;"
		        tal:replace="python:toLocalizedTime(item_modified,long_format=1)">
            August 16, 2001 at 23:35:59
          </span>
        </div>
      </tal:showme>
    </metal:byline>
    
  </body>
</html>
